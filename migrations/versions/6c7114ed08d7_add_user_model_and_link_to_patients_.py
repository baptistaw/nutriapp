"""Add User model and link to patients evaluations and preparations

Revision ID: 6c7114ed08d7
Revises: bedbc1c423c8
Create Date: 2025-06-23 23:29:08.333424

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime, timezone # Import datetime for default user


# revision identifiers, used by Alembic.
revision = '6c7114ed08d7'
down_revision = 'bedbc1c423c8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Create the user table
    user_table = op.create_table('user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('firebase_uid', sa.String(length=128), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_firebase_uid'), ['firebase_uid'], unique=True)

    # Step 2: Insert a temporary, default user to associate existing data with.
    # This user can be updated or ignored later. It's essential for the migration to succeed.
    op.bulk_insert(user_table,
        [
            {
                'firebase_uid': 'DEFAULT_USER_PLACEHOLDER_UID',
                'email': 'default_user@nutriapp.placeholder',
                'name': 'Usuario por Defecto',
                'created_at': datetime.now(timezone.utc)
            }
        ]
    )

    # Step 3: Add the user_id columns to other tables, making them nullable initially
    with op.batch_alter_table('evaluation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_evaluation_user_id_user'), 'user', ['user_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_evaluation_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_patient_user_id_user'), 'user', ['user_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_patient_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('user_preparation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_user_preparation_user_id_user'), 'user', ['user_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_user_preparation_user_id'), ['user_id'], unique=False)

    # Step 4: Populate the new user_id columns with the ID of the default user we just created
    op.execute("UPDATE evaluation SET user_id = (SELECT id FROM \"user\" WHERE firebase_uid = 'DEFAULT_USER_PLACEHOLDER_UID') WHERE user_id IS NULL")
    op.execute("UPDATE patient SET user_id = (SELECT id FROM \"user\" WHERE firebase_uid = 'DEFAULT_USER_PLACEHOLDER_UID') WHERE user_id IS NULL")
    op.execute("UPDATE user_preparation SET user_id = (SELECT id FROM \"user\" WHERE firebase_uid = 'DEFAULT_USER_PLACEHOLDER_UID') WHERE user_id IS NULL")

    # Step 5: Now that all rows have a user_id, alter the columns to be NOT NULL
    with op.batch_alter_table('evaluation', schema=None) as batch_op:
        batch_op.alter_column('user_id', existing_type=sa.Integer(), nullable=False)

    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.alter_column('user_id', existing_type=sa.Integer(), nullable=False)

    with op.batch_alter_table('user_preparation', schema=None) as batch_op:
        batch_op.alter_column('user_id', existing_type=sa.Integer(), nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_preparation', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_user_preparation_user_id_user'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_user_preparation_user_id'))
        batch_op.drop_column('user_id')

    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_patient_user_id_user'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_patient_user_id'))
        batch_op.drop_column('user_id')

    with op.batch_alter_table('evaluation', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_evaluation_user_id_user'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_evaluation_user_id'))
        batch_op.drop_column('user_id')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_firebase_uid'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
