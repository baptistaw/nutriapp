"""Creacion inicial completa del esquema v4

Revision ID: e9115afa3cb7
Revises: 
Create Date: 2025-05-18 10:41:04.489274

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e9115afa3cb7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ingredient_name'), ['name'], unique=True)

    op.create_table('patient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('surname', sa.String(length=80), nullable=False),
    sa.Column('cedula', sa.String(length=20), nullable=False),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone_number', sa.String(length=30), nullable=True),
    sa.Column('education_level', sa.String(length=50), nullable=True),
    sa.Column('purchasing_power', sa.String(length=50), nullable=True),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('allergies_json', sa.Text(), nullable=True),
    sa.Column('intolerances_json', sa.Text(), nullable=True),
    sa.Column('preferences_json', sa.Text(), nullable=True),
    sa.Column('aversions_json', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_patient_cedula'), ['cedula'], unique=True)
        batch_op.create_index(batch_op.f('ix_patient_email'), ['email'], unique=True)

    op.create_table('user_preparation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('ingredients_json', sa.Text(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('preparation_type', sa.String(length=50), nullable=True),
    sa.Column('suitability_tags_json', sa.Text(), nullable=False),
    sa.Column('num_servings', sa.Float(), nullable=True),
    sa.Column('calories_per_serving', sa.Float(), nullable=True),
    sa.Column('protein_g_per_serving', sa.Float(), nullable=True),
    sa.Column('carb_g_per_serving', sa.Float(), nullable=True),
    sa.Column('fat_g_per_serving', sa.Float(), nullable=True),
    sa.Column('micronutrients_per_serving_json', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('consultation_date', sa.DateTime(), nullable=True),
    sa.Column('weight_at_eval', sa.Float(), nullable=True),
    sa.Column('wrist_circumference_cm', sa.Float(), nullable=True),
    sa.Column('waist_circumference_cm', sa.Float(), nullable=True),
    sa.Column('hip_circumference_cm', sa.Float(), nullable=True),
    sa.Column('gestational_age_weeks', sa.Integer(), nullable=True),
    sa.Column('activity_factor', sa.Float(), nullable=True),
    sa.Column('calculated_imc', sa.Float(), nullable=True),
    sa.Column('calculated_complexion', sa.String(length=20), nullable=True),
    sa.Column('calculated_waist_hip_ratio', sa.Float(), nullable=True),
    sa.Column('calculated_waist_height_ratio', sa.Float(), nullable=True),
    sa.Column('calculated_ideal_weight', sa.Float(), nullable=True),
    sa.Column('calculated_calories', sa.Float(), nullable=True),
    sa.Column('imc_risk', sa.String(length=10), nullable=True),
    sa.Column('whr_risk', sa.String(length=10), nullable=True),
    sa.Column('whtr_risk', sa.String(length=10), nullable=True),
    sa.Column('pathologies_json', sa.Text(), nullable=True),
    sa.Column('other_pathologies_text', sa.Text(), nullable=True),
    sa.Column('postoperative_text', sa.Text(), nullable=True),
    sa.Column('diet_type', sa.String(length=100), nullable=True),
    sa.Column('other_diet_type_text', sa.Text(), nullable=True),
    sa.Column('target_weight', sa.Float(), nullable=True),
    sa.Column('target_waist_cm', sa.Float(), nullable=True),
    sa.Column('target_protein_perc', sa.Float(), nullable=True),
    sa.Column('target_carb_perc', sa.Float(), nullable=True),
    sa.Column('target_fat_perc', sa.Float(), nullable=True),
    sa.Column('edited_plan_text', sa.Text(), nullable=True),
    sa.Column('user_observations', sa.Text(), nullable=True),
    sa.Column('structured_plan_input_json', sa.Text(), nullable=True),
    sa.Column('pdf_storage_path', sa.String(length=255), nullable=True),
    sa.Column('micronutrients_json', sa.Text(), nullable=True),
    sa.Column('base_foods_json', sa.Text(), nullable=True),
    sa.Column('references_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('evaluation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_evaluation_consultation_date'), ['consultation_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_evaluation_patient_id'), ['patient_id'], unique=False)

    op.create_table('ingredient_nutrient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('reference_quantity', sa.Float(), nullable=False),
    sa.Column('reference_unit', sa.String(length=50), nullable=False),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein_g', sa.Float(), nullable=True),
    sa.Column('carb_g', sa.Float(), nullable=True),
    sa.Column('fat_g', sa.Float(), nullable=True),
    sa.Column('micronutrients_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ingredient_nutrient', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ingredient_nutrient_ingredient_id'), ['ingredient_id'], unique=False)

    op.create_table('unit_equivalence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('household_unit', sa.String(length=50), nullable=False),
    sa.Column('grams_per_unit', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('unit_equivalence', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_unit_equivalence_ingredient_id'), ['ingredient_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('unit_equivalence', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_unit_equivalence_ingredient_id'))

    op.drop_table('unit_equivalence')
    with op.batch_alter_table('ingredient_nutrient', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ingredient_nutrient_ingredient_id'))

    op.drop_table('ingredient_nutrient')
    with op.batch_alter_table('evaluation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_evaluation_patient_id'))
        batch_op.drop_index(batch_op.f('ix_evaluation_consultation_date'))

    op.drop_table('evaluation')
    op.drop_table('user_preparation')
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patient_email'))
        batch_op.drop_index(batch_op.f('ix_patient_cedula'))

    op.drop_table('patient')
    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ingredient_name'))

    op.drop_table('ingredient')
    # ### end Alembic commands ###
